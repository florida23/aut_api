{
	"info": {
		"_postman_id": "a2519e41-f0a1-428d-b616-0ea4a5e37dbe",
		"name": "Florida_Release_Notes_Master",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4827236"
	},
	"item": [
		{
			"name": "Camada de Integração - CI",
			"item": [
				{
					"name": "Cadastro",
					"item": [
						{
							"name": "Propostas",
							"item": [
								{
									"name": "HEIM143 - POST: /propostas/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"09656853067\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Endereços",
							"item": [
								{
									"name": "PIER118 - POST: /api/enderecos/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=1&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "1"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER117 - GET: /api/enderecos",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=0",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "0"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Telefones",
							"item": [
								{
									"name": "PIER138 - POST: /api/telefones_inclui_valido(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"id\",\r",
													"        \"idTipoTelefone\",\r",
													"        \"idPessoa\",\r",
													"        \"ddd\",\r",
													"        \"telefone\",\r",
													"        \"ramal\",\r",
													"        \"status\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"id\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The id Schema\",\r",
													"            \"examples\": [\r",
													"                3930\r",
													"            ]\r",
													"        },\r",
													"        \"idTipoTelefone\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idTipoTelefone Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"idPessoa\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idPessoa Schema\",\r",
													"            \"examples\": [\r",
													"                1323\r",
													"            ]\r",
													"        },\r",
													"        \"ddd\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The ddd Schema\",\r",
													"            \"examples\": [\r",
													"                \"11\"\r",
													"            ]\r",
													"        },\r",
													"        \"telefone\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The telefone Schema\",\r",
													"            \"examples\": [\r",
													"                \"991882511\"\r",
													"            ]\r",
													"        },\r",
													"        \"ramal\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The ramal Schema\",\r",
													"            \"examples\": [\r",
													"                \"10\"\r",
													"            ]\r",
													"        },\r",
													"        \"status\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The status Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"id\": 3930,\r",
													"        \"idTipoTelefone\": 1,\r",
													"        \"idPessoa\": 1323,\r",
													"        \"ddd\": \"11\",\r",
													"        \"telefone\": \"991882511\",\r",
													"        \"ramal\": \"10\",\r",
													"        \"status\": 1\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=991882511&ramal=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tamanho_dentro_do_limite(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verifica se o tamanho do telefone é maior ou igual a 8 e menor ou igual a 9\r",
													"\r",
													"pm.test(\"Tamanho do telefone está correto\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.telefone.length).to.be.within(8, 9);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=99188251&ramal=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "99188251"
												},
												{
													"key": "ramal",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"AA\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_inicio_Zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"01\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_somente_Zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"00\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_<_1(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"1\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_>_2(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 2 caracteres\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"111\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = \"A\";\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = \"\";\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O participante informado é inexistente\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = 5900777777;\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"A\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal={{letra}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "{{letra}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"ID do tipo de telefone inválido.\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"3248604\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal={{letra}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "{{letra}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ramal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"ID do tipo de telefone inválido.\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var vramal = \"AA\";\r",
													"pm.globals.set(\"vramal\", vramal);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=991882511&ramal={{vramal}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "{{vramal}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Buscar por ID existente e valida se o id na resposta é mesmo informado na busca\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.content[0].idPessoa).to.eql(1444);\r",
													"});\r",
													"  \r",
													" const schema = {\r",
													"   \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"content\",\r",
													"        \"first\",\r",
													"        \"firstPage\",\r",
													"        \"hasContent\",\r",
													"        \"hasNextPage\",\r",
													"        \"hasPreviousPage\",\r",
													"        \"last\",\r",
													"        \"nextPage\",\r",
													"        \"number\",\r",
													"        \"numberOfElements\",\r",
													"        \"previousPage\",\r",
													"        \"size\",\r",
													"        \"totalElements\",\r",
													"        \"totalPages\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"content\": {\r",
													"            \"type\": \"array\",\r",
													"            \"default\": [],\r",
													"            \"title\": \"The content Schema\",\r",
													"            \"items\": {\r",
													"                \"type\": \"object\",\r",
													"                \"default\": {},\r",
													"                \"title\": \"A Schema\",\r",
													"                \"required\": [\r",
													"                    \"id\",\r",
													"                    \"idTipoTelefone\",\r",
													"                    \"idPessoa\",\r",
													"                    \"ddd\",\r",
													"                    \"telefone\",\r",
													"                    \"ramal\",\r",
													"                    \"status\"\r",
													"                ],\r",
													"                \"properties\": {\r",
													"                    \"id\": {\r",
													"                        \"type\": \"integer\",\r",
													"                        \"default\": 0,\r",
													"                        \"title\": \"The id Schema\",\r",
													"                        \"examples\": [\r",
													"                            2879\r",
													"                        ]\r",
													"                    },\r",
													"                    \"idTipoTelefone\": {\r",
													"                        \"type\": \"integer\",\r",
													"                        \"default\": 0,\r",
													"                        \"title\": \"The idTipoTelefone Schema\",\r",
													"                        \"examples\": [\r",
													"                            3\r",
													"                        ]\r",
													"                    },\r",
													"                    \"idPessoa\": {\r",
													"                        \"type\": \"integer\",\r",
													"                        \"default\": 0,\r",
													"                        \"title\": \"The idPessoa Schema\",\r",
													"                        \"examples\": [\r",
													"                            1444\r",
													"                        ]\r",
													"                    },\r",
													"                    \"ddd\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"default\": \"\",\r",
													"                        \"title\": \"The ddd Schema\",\r",
													"                        \"examples\": [\r",
													"                            \"11\"\r",
													"                        ]\r",
													"                    },\r",
													"                    \"telefone\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"default\": \"\",\r",
													"                        \"title\": \"The telefone Schema\",\r",
													"                        \"examples\": [\r",
													"                            \"991886199\"\r",
													"                        ]\r",
													"                    },\r",
													"                    \"ramal\": {\r",
													"                        \"type\": \"string\",\r",
													"                        \"default\": \"\",\r",
													"                        \"title\": \"The ramal Schema\",\r",
													"                        \"examples\": [\r",
													"                            \"1234\"\r",
													"                        ]\r",
													"                    },\r",
													"                    \"status\": {\r",
													"                        \"type\": \"integer\",\r",
													"                        \"default\": 0,\r",
													"                        \"title\": \"The status Schema\",\r",
													"                        \"examples\": [\r",
													"                            1\r",
													"                        ]\r",
													"                    }\r",
													"                },\r",
													"                \"examples\": [{\r",
													"                    \"id\": 2879,\r",
													"                    \"idTipoTelefone\": 3,\r",
													"                    \"idPessoa\": 1444,\r",
													"                    \"ddd\": \"11\",\r",
													"                    \"telefone\": \"991886199\",\r",
													"                    \"ramal\": \"1234\",\r",
													"                    \"status\": 1\r",
													"                }]\r",
													"            },\r",
													"            \"examples\": [\r",
													"                [{\r",
													"                    \"id\": 2879,\r",
													"                    \"idTipoTelefone\": 3,\r",
													"                    \"idPessoa\": 1444,\r",
													"                    \"ddd\": \"11\",\r",
													"                    \"telefone\": \"991886199\",\r",
													"                    \"ramal\": \"1234\",\r",
													"                    \"status\": 1\r",
													"                }]\r",
													"            ]\r",
													"        },\r",
													"        \"first\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The first Schema\",\r",
													"            \"examples\": [\r",
													"                true\r",
													"            ]\r",
													"        },\r",
													"        \"firstPage\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The firstPage Schema\",\r",
													"            \"examples\": [\r",
													"                true\r",
													"            ]\r",
													"        },\r",
													"        \"hasContent\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The hasContent Schema\",\r",
													"            \"examples\": [\r",
													"                true\r",
													"            ]\r",
													"        },\r",
													"        \"hasNextPage\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The hasNextPage Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"hasPreviousPage\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The hasPreviousPage Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"last\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The last Schema\",\r",
													"            \"examples\": [\r",
													"                true\r",
													"            ]\r",
													"        },\r",
													"        \"nextPage\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The nextPage Schema\",\r",
													"            \"examples\": [\r",
													"                0\r",
													"            ]\r",
													"        },\r",
													"        \"number\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The number Schema\",\r",
													"            \"examples\": [\r",
													"                0\r",
													"            ]\r",
													"        },\r",
													"        \"numberOfElements\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numberOfElements Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"previousPage\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The previousPage Schema\",\r",
													"            \"examples\": [\r",
													"                0\r",
													"            ]\r",
													"        },\r",
													"        \"size\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The size Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"totalElements\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The totalElements Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"totalPages\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The totalPages Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"content\": [{\r",
													"            \"id\": 2879,\r",
													"            \"idTipoTelefone\": 3,\r",
													"            \"idPessoa\": 1444,\r",
													"            \"ddd\": \"11\",\r",
													"            \"telefone\": \"991886199\",\r",
													"            \"ramal\": \"1234\",\r",
													"            \"status\": 1\r",
													"        }],\r",
													"        \"first\": true,\r",
													"        \"firstPage\": true,\r",
													"        \"hasContent\": true,\r",
													"        \"hasNextPage\": false,\r",
													"        \"hasPreviousPage\": false,\r",
													"        \"last\": true,\r",
													"        \"nextPage\": 0,\r",
													"        \"number\": 0,\r",
													"        \"numberOfElements\": 1,\r",
													"        \"previousPage\": 0,\r",
													"        \"size\": 1,\r",
													"        \"totalElements\": 1,\r",
													"        \"totalPages\": 1\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"   \r",
													"   pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"   \r",
													" \r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=1444",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1444"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.errors[0].message).to.eql(\"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"O participante informado é inexistente.\");\r",
													"});\r",
													"\r",
													"pm.test(`O número aleatório gerado é ${pm.variables.get(\"randomId\")}`, function () {\r",
													"   \r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var randomId = Math.floor(Math.random() * 15151515) + 1;\r",
													"pm.globals.set(\"randomId\", randomId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa={{randomId}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "{{randomId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar a mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.errors[0].message).to.eql(\"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=A",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/id_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.test(\"Campo 'id' não é vazio\", function () {\r",
													"   pm.expect(responseJson.id).not.to.equal(\"\");\r",
													" });\r",
													"\r",
													" pm.test(\"Campo 'id' está presente\", function () {\r",
													"   pm.expect(responseJson).to.have.property(\"id\");\r",
													" });\r",
													"\r",
													" pm.test(\"Campo 'id' é numérico\", function (){ \r",
													"    pm.expect(responseJson.id).to.be.a(\"number\");\r",
													" });\r",
													"\r",
													"pm.test(\"Campo 'idTipoTelefone' não é vazio\", function () {\r",
													"   pm.expect(responseJson.idTipoTelefone).not.to.equal(\"\");\r",
													" });\r",
													"\r",
													" pm.test(\"Campo 'idTipoTelefone' está presente\", function () {\r",
													"   pm.expect(responseJson).to.have.property(\"idTipoTelefone\");\r",
													" });\r",
													"\r",
													" pm.test(\"Campo 'idTipoTelefone' é numérico\", function (){ \r",
													"    pm.expect(responseJson.idTipoTelefone).to.be.a(\"number\");\r",
													" });\r",
													"\r",
													"pm.test(\"Check 'idTipoTelefone' 1, 2 ou 3\", function() {\r",
													"    pm.expect(responseJson.idTipoTelefone).to.be.oneOf([1, 2, 3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Buscar por ID existente e validar se o id da resposta é mesmo informado na busca\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(2879);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"id\",\r",
													"        \"idTipoTelefone\",\r",
													"        \"idPessoa\",\r",
													"        \"ddd\",\r",
													"        \"telefone\",\r",
													"        \"ramal\",\r",
													"        \"status\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"id\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The id Schema\",\r",
													"            \"examples\": [\r",
													"                2879\r",
													"            ]\r",
													"        },\r",
													"        \"idTipoTelefone\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idTipoTelefone Schema\",\r",
													"            \"examples\": [\r",
													"                3\r",
													"            ]\r",
													"        },\r",
													"        \"idPessoa\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idPessoa Schema\",\r",
													"            \"examples\": [\r",
													"                1444\r",
													"            ]\r",
													"        },\r",
													"        \"ddd\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The ddd Schema\",\r",
													"            \"examples\": [\r",
													"                \"11\"\r",
													"            ]\r",
													"        },\r",
													"        \"telefone\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The telefone Schema\",\r",
													"            \"examples\": [\r",
													"                \"991886199\"\r",
													"            ]\r",
													"        },\r",
													"        \"ramal\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The ramal Schema\",\r",
													"            \"examples\": [\r",
													"                \"1234\"\r",
													"            ]\r",
													"        },\r",
													"        \"status\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The status Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"id\": 2879,\r",
													"        \"idTipoTelefone\": 3,\r",
													"        \"idPessoa\": 1444,\r",
													"        \"ddd\": \"11\",\r",
													"        \"telefone\": \"991886199\",\r",
													"        \"ramal\": \"1234\",\r",
													"        \"status\": 1\r",
													"    }]\r",
													"}\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"   \r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"   \r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/2879",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												"2879"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/id_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"O id informado é inexistente.\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta deve ser em formato Json\", function () {\r",
													"      pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"   pm.response.to.be.withBody;\r",
													"    \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/em_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"Query string parameters ausentes.\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta deve ser em formato Json\", function () {\r",
													"      pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Contas",
							"item": [
								{
									"name": "PIER097 - POST: /api/contas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 11493,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 10,\n    \"limiteGlobal\": 777,\n    \"limiteMaximo\": 1234,\n    \"limiteParcelas\": 1234,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER110 - POST : /api/contas/${idConta}/reativar",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/2027880/reativar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"2027880",
												"reativar"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER102 - POST - /api/contas/{id}/bloquear",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/1365/bloquear?id_status=2",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"1365",
												"bloquear"
											],
											"query": [
												{
													"key": "id_status",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER107 - POST:/api/contas/{id}/normalizacao",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 97,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/2027881/normalizacao",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"2027881",
												"normalizacao"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER050 - GET: /api/dados-bancarios-conta",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/dados-bancarios-conta?id=20022000&idConta=123456789&idTipoContaBancaria=4",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"dados-bancarios-conta"
											],
											"query": [
												{
													"key": "id",
													"value": "20022000"
												},
												{
													"key": "idConta",
													"value": "123456789"
												},
												{
													"key": "idTipoContaBancaria",
													"value": "4"
												}
											]
										},
										"description": "Lambda: **lmb-int-contas**"
									},
									"response": []
								}
							]
						},
						{
							"name": "Adicional",
							"item": [
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 97,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER099 - POST:/api/contas/{id}/adicionais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/41/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"41",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER098 - GET: /api/contas/{id}/adicionais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/123/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"123",
												"adicionais"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Pessoas",
							"item": [
								{
									"name": "PIER054 - GET: /api/pessoas/cpf_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"function _isContains(json, keyname, value) {\r",
													" return Object.keys(json).some(key => {\r",
													"        return typeof json[key] === 'object' ? \r",
													"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do response\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(_isContains(jsonData.error, \"errorCode\" ,\"1000\")).to.be.true;\r",
													"        pm.expect(_isContains(jsonData.error, \"message\" ,\"Cliente não encontrado\")).to.be.true;\r",
													"    });\r",
													"\r",
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?cpf=77372216036",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "77372216036"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER054 - GET: /api/pessoas/cpf_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar que o campo id não pode ser vazio ou nulo\", function () {\r",
													"       const resp = pm.response.json()\r",
													"       pm.expect(resp.content[0].id).not.to.equal(\"\");  \r",
													"       pm.expect(resp.content[0].id).not.equal(null);   \r",
													"});\r",
													"\r",
													"pm.test(\"Validar o valor do query param com o valor cpf do response\", function () {\r",
													"        const str = pm.request.url.getQueryString();\r",
													"        let arr = str.split(\"=\")\r",
													"        const res = pm.response.json()\r",
													"        pm.expect(res.content[0].cpf).to.equal(arr[1]);    \r",
													"});    \r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.ok;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"content\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"          \"id\": {\r",
													"            \"type\": \"number\"\r",
													"          },\r",
													"          \"nome\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"tipo\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"cpf\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"dataNascimento\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"sexo\": {\r",
													"            \"type\": \"string\"\r",
													"          }\r",
													"        },\r",
													"        \"required\": [\r",
													"          \"id\",\r",
													"          \"nome\",\r",
													"          \"tipo\",\r",
													"          \"cpf\",\r",
													"          \"dataNascimento\",\r",
													"          \"sexo\"\r",
													"        ]\r",
													"      }\r",
													"    },\r",
													"    \"first\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"firstPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasContent\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasNextPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasPreviousPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"last\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"nextPage\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"number\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"numberOfElements\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"previousPage\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"size\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"totalElements\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"totalPages\": {\r",
													"      \"type\": \"number\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"content\",\r",
													"    \"first\",\r",
													"    \"firstPage\",\r",
													"    \"hasContent\",\r",
													"    \"hasNextPage\",\r",
													"    \"hasPreviousPage\",\r",
													"    \"last\",\r",
													"    \"nextPage\",\r",
													"    \"number\",\r",
													"    \"numberOfElements\",\r",
													"    \"previousPage\",\r",
													"    \"size\",\r",
													"    \"totalElements\",\r",
													"    \"totalPages\"\r",
													"  ]\r",
													"}\r",
													");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?cpf=34912196800",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "34912196800"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - GET: /api/pessoas-detalhes/idPessoa_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"    pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"    });\r",
													"\r",
													"\r",
													"    pm.test(\"Validar o formato do campo email\", function () {\r",
													"        var data = pm.response.json();\r",
													"        pm.expect(data.email).to.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/);\r",
													"\r",
													"    });\r",
													"\r",
													"    pm.test(\"Validar a comparação idPessoa entre Request e Response\", function () {\r",
													"       var url = pm.request.url.toString();\r",
													"       var value = url.split(\"/\");\r",
													"       for(var x=0; x<=value.length-1; x++){\r",
													"           if(value[x].match(value[x], /^[0-9]+$/)){\r",
													"               var requestIdUrl = value[x].toString();\r",
													"           }\r",
													"       }\r",
													"       var respondeIdPessoa = pm.response.json();\r",
													"       pm.expect(respondeIdPessoa.idPessoa).to.equal(parseInt(requestIdUrl));\r",
													"       \r",
													"    });\r",
													"\r",
													"    pm.test(\"Validar a quantidade de campos do schema com o response\", function () {\r",
													"        const responseJson = pm.response.json();\r",
													"        var countResponse = Object.keys(responseJson).length;\r",
													"        const schema = pm.variables.get(\"schema\");\r",
													"        var parseSchema = JSON.parse(JSON.stringify(schema.properties));\r",
													"        var countSchema = Object.keys(parseSchema).length;\r",
													"        pm.expect(countResponse).to.equal(countSchema);\r",
													"       \r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 200\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.ok;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"idPessoa\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomeMae\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"idEstadoCivil\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"idNacionalidade\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"email\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"salario\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"impedidoFinanciamento\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"naturalidadeCidade\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"naturalidadeEstado\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"grauInstrucao\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomePai\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"pessoaPoliticamenteExposta\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"patrimonioTotal\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"flagNomePaiNaoInformado\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"flagSemEnderecoComercialFixo\": {\r",
													"      \"type\": \"boolean\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"idPessoa\",\r",
													"    \"nomeMae\",\r",
													"    \"idEstadoCivil\",\r",
													"    \"idNacionalidade\",\r",
													"    \"email\",\r",
													"    \"salario\",\r",
													"    \"impedidoFinanciamento\",\r",
													"    \"naturalidadeCidade\",\r",
													"    \"naturalidadeEstado\",\r",
													"    \"grauInstrucao\",\r",
													"    \"nomePai\",\r",
													"    \"pessoaPoliticamenteExposta\",\r",
													"    \"patrimonioTotal\",\r",
													"    \"flagNomePaiNaoInformado\",\r",
													"    \"flagSemEnderecoComercialFixo\"\r",
													"  ]\r",
													"}\r",
													");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1598",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1598"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   \r",
													"\r",
													"\r",
													"   \r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/12?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"12"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag nomeMae(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   \r",
													"\r",
													"\r",
													"   \r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMariaSilaSilvaMariaMariaSilaMariaSilaMariaSilaMariaSila&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMaria SilvaMariaSilaSilvaMariaMariaSilaMariaSilaMariaSilaMariaSila"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroBanco(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   \r",
													"\r",
													"\r",
													"   \r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=100000&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "100000"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroBanco - letra e numero(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroBanco/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=123a&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "123a"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroagencia(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroBanco/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349101112131416&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349101112131416"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroagencia com digito(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=100-8&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "100-8"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag NumeroContacorrente com mais de 15 caracteres(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345678910111213141516&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345678910111213141516"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag nomeEmpresa(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some companysome companysome companysome companysome companysome companysome companysome companysomec&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some companysome companysome companysome companysome companysome companysome companysome companysomec"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag nomeReferencia1(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1s&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1s"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag naturalidadeCidade(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao%40email.com&naturalidadeCidade=Sao PauloSao PauloSao PauloSao PauloSao PauloSao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao PauloSao PauloSao PauloSao PauloSao PauloSao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag naturalidadeEstado(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DFD&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DFD"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag grauInstrucao(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=256&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "256"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroDependentes(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=256&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "256"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag nomePai(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jose da SilvaJose da SilvaJose da SilvaJose da SilvaJose da SilvaJose da SilvaJose&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jose da SilvaJose da SilvaJose da SilvaJose da SilvaJose da SilvaJose da SilvaJose"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag numeroCnh(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jose da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jose da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Validação da tag dataEmissaoCnh(-)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jose da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jose da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/Requisição válida(+)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"   pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJraWQiOiIzK21rTFZZaVlKXC9KUzFyZ1RYSFk1SUM4cE05bEpEbTdxUzdpbklMMzVOWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0M2ZmZjN1a2hzZW8wcmNzaGNjaW45a3ZmdCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZ3JvdXBzXC91c2VyX21nbXQgZ3JvdXBzXC9mdWxsQWNjZXNzIiwiYXV0aF90aW1lIjoxNjgzNTU5NzE5LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9pQTdRRTdQSzIiLCJleHAiOjE2ODM1NjMzMTksImlhdCI6MTY4MzU1OTcxOSwidmVyc2lvbiI6MiwianRpIjoiYzJjOTU3NzEtOGM5Ni00ZjQ4LTg0OTQtZGY4NzkwMmE0NzQ2IiwiY2xpZW50X2lkIjoiNDNmZmYzdWtoc2VvMHJjc2hjY2luOWt2ZnQifQ.msmeeEL5xFiTcLURayRi02PqLTqNQZniZBncfMIb3bY08y9m7GQWxI4oosJXbvk--4qvoclcpn1pqDzrqM_ZUnLSRrCouYp2kubDo_MqXNnn5dPzkhgPVaaAoz7NSuPvkgrUN2gjQTQoYW0qqqYAnUmH5s_YTa3IpI1Wj2rT7WoalHr4DyyO5kmqzk_DGVY4RJa13wyJA440-Vet_E9QQioUIt2E4kiOABUTdPBisO5dfDpuCBzzbVVE5dxNIv9m6ho77RSZjsS2gmmAWJJhNKe5jplCKaVD2OYTmQzrEdTNY5jFzmiNwjq4Qkm_eHAvwh2_JQEBOrhtgPxKkUERow",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1?nomeMae=Maria Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=12345&email=joao@email.com&naturalidadeCidade=Sao Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jose da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Sao Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jose da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - PUT: /api/pessoas-detalhes/ sem a tag idPessoa(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"    pm.test(\"Validar a estrutura do schema\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.message).be.equal(\"Missing Authentication Token\");\r",
													"    });\r",
													"    \r",
													"    pm.test(\"GET Status code is 403\", function () {\r",
													"        pm.response.to.have.status(403);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.forbidden;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"idPessoa\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomeMae\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"idEstadoCivil\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"idNacionalidade\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"email\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"salario\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"impedidoFinanciamento\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"naturalidadeCidade\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"naturalidadeEstado\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"grauInstrucao\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomePai\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"pessoaPoliticamenteExposta\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"patrimonioTotal\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"flagNomePaiNaoInformado\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"flagSemEnderecoComercialFixo\": {\r",
													"      \"type\": \"boolean\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"idPessoa\",\r",
													"    \"nomeMae\",\r",
													"    \"idEstadoCivil\",\r",
													"    \"idNacionalidade\",\r",
													"    \"email\",\r",
													"    \"salario\",\r",
													"    \"impedidoFinanciamento\",\r",
													"    \"naturalidadeCidade\",\r",
													"    \"naturalidadeEstado\",\r",
													"    \"grauInstrucao\",\r",
													"    \"nomePai\",\r",
													"    \"pessoaPoliticamenteExposta\",\r",
													"    \"patrimonioTotal\",\r",
													"    \"flagNomePaiNaoInformado\",\r",
													"    \"flagSemEnderecoComercialFixo\"\r",
													"  ]\r",
													"}\r",
													");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?nomeMae=Maria%20Silva&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao%40email.com&naturalidadeCidade=S%C3%A3o%20Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Jos%C3%A9%20da%20Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01%3A30%3A00.000-05%3A00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some%20company&nomeReferencia1=some%20nomeReferencia1&enderecoReferencia1=some%20enderecoReferencia1&nomeReferencia2=some%20nomeReferencia2&enderecoReferencia2=some%20enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria%20Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao%40email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Jos%C3%A9%20da%20Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01%3A30%3A00.000-05%3A00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some%20company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some%20nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some%20enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some%20nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some%20enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - GET: /api/pessoas-detalhes/idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"    pm.test(\"Validar a estrutura do response\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error.errors).to.be.an(\"array\");\r",
													"        pm.expect(jsonData.error.errorCode).equal(\"0009\");\r",
													"        pm.expect(jsonData.error.message).equal(\"O participante informado é inexistente.\"); \r",
													"        \r",
													"    });\r",
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/9910491111",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"9910491111"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM065 - GET:/api/pessoas/{id}/cadastro/v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/23/cadastro",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"23",
												"cadastro"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER129 - GET: api/pessoas/{id} - id inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do response\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error.errors).to.be.an(\"array\");\r",
													"        pm.expect(jsonData.error.errorCode).equal(\"0009\");\r",
													"        pm.expect(jsonData.error.message).equal(\"O participante informado é inexistente.\"); \r",
													"        \r",
													"    });\r",
													"\r",
													"    pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.notFound;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?id=1196666",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "id",
													"value": "1196666"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER135 - GET: /api/pessoas-detalhes/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/23",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"23"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER131 - PATCH: /api/pessoas/{id}/detalhes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas/123/detalhes",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas",
												"123",
												"detalhes"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag nomeMae(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/nomeMae/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 150 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae SilvaMae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroBanco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroBanco/maximum\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(99999);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser <= 99999\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"comparison\": {\r",
													"                    \"type\": \"string\"\r",
													"                  },\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"comparison\",\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=100000&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "100000"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroBanco - letra e numero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroBanco/type\");\r",
													"    pm.expect(jsonData.error.errors[0].params.type).be.equal(\"number\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"type\": {\r",
													"                    \"type\": \"string\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"type\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=99a&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "99a"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroagencia(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/maximum\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(99999);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser <= 99999\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"comparison\": {\r",
													"                    \"type\": \"string\"\r",
													"                  },\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"comparison\",\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=100000&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "100000"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroagencia com digito(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].params.type).be.equal(\"number\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"type\": {\r",
													"                    \"type\": \"string\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"type\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=100-8&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "100-8"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag NumeroContacorrente com mais de 15 caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroContaCorrente/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(15);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 15 caracteres\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=1234567891234567&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "1234567891234567"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag email(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/email/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(50);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 50 caracteres\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@emailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemail.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@emailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemail.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag nomeEmpresa(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/nomeEmpresa/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(100);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 100 caracteres\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company some companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company some companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag nomeReferencia1(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/nomeReferencia1/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(80);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 80 caracteres\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1 some nomeReferencia1 some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1 some nomeReferencia1 some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag naturalidadeCidade(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/naturalidadeCidade/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(100);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 100 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão PauloSão Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "ERRO ---- PIER134 - POST: /api/pessoas-detalhes/ Validação da tag naturalidadeEstado(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/naturalidadeEstado/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(2);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 2 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroDependentes(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroDependentes/maximum\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(255);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser <= 255\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=256&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "256"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag nomePai(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/nomePai/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(80);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 80 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da Si&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da SilvaPai da Si"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroCnh(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroCnh/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(15);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 15 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=2314303155611111&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "2314303155611111"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag dataEmissaoCnh(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroCnh/maxLength\");\r",
													"    pm.expect(jsonData.error.errors[0].params.limit).be.equal(15);\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"não deve ser maior que 15 caracteres\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=1&idNaturezaOcupacao=9&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=1999-05-28",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": "1999-05-28"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id} Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=1999-05-28",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": "1999-05-28"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER136 - PUT: /api/pessoas-detalhes/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/15?nomeMae=Maria Silva&idEstadoCivil=1&idProfissao=engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=joao@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=José da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"15"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Maria Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "joao@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "José da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}